@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title></title>
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
</head>
<body>
    <div id="div1">
        JS面向对象
        <p id="p1"> </p>
    </div>
    <script type="text/javascript">
        window.onload = function () {
            var currDate = new Date();
            $('#p1').text(currDate.getHours() + ":" + currDate.getMinutes() + ":" + currDate.getSeconds());
        }
        //定义全局方法
        Fun1 = function () {
            console.log('方法：myclass-fun1');
        }
        //调用全局方法Fun1
        Fun1();

        //定义js对象MyClass
        function MyClass() {
            console.log('MyClass初始化开始');
            //定义全局方法Fun2
            //var Fun2 = function () {
            //    console.log('方法：myclass-fun2');
            //}
            var val1 = "123";
            this.val3 = "798";
            MyClass.prototype.Val2 = "456";
            MyClass.prototype.Fun2 = function () {
                console.log('方法：myclass-fun2-Val2==' + MyClass.prototype.Val2);
                console.log('方法：myclass-fun2-val3==' +this.val3);
            }
            console.log('MyClass初始化结束');
        }
        //初始化js对象MyClass
        MyClass();
        //调用全局方法Fun2
        MyClass.prototype.Fun2();
        //alert(MyClass.prototype.Val2);
        //alert(window.val3);


        ////覆盖全局方法Fun2
        //Fun2 = function () {
        //    console.log('方法：myclass-fun2-v2');
        //}
        ////调用覆盖后的全局方法Fun2
        //Fun2();
        var arr = [1, 2, 3, 4, 5];
        arr.show = function () {
            //alert(this);
        }
        arr.show(); //弹出 1,2,3,4,5

        var MyObj2 = new Object();
        MyObj2.name = 'myobje2name';
        MyObj2.show = function () {
            console.log('MyObj2-show--' + this.name);
        }
        MyObj2.show();


    </script>
    <script>
        $(function () {
            alert('1234');
        })
    </script>
</body>
</html>
